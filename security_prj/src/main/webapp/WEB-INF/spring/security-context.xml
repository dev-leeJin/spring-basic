<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security
	    http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans
	    http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="customAccessDenied" class="com.ict.security.CustomAccessDeniedHandler"></bean>
	<bean id="customLoginSuccess" class="com.ict.security.CustomLoginSuccessHandler"></bean>
	<bean id="customUserDetailsService" class="com.ict.security.CustomUserDetailsService" />
	<bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
	
	<security:http>
	
		<!-- /secu/all 접속시 모든 유저에게 접근 허용 -->
		<security:intercept-url pattern="/secu/all" access="permitAll"/>
		
		<!-- /secu/member는 Member에게만 접근 허용 -->
	<!-- 	<security:intercept-url pattern="/secu/member" access="hasRole('ROLE_MEMBER')" />  -->
		
		<!-- /secu/admin은 admin에게만 접근 허용 --> <!-- admin은 member의 상위 버전이 아니라 하나의 계정이 뿐이라 밑에 권한을 하나 더 부여해야 한다.  -->
	<!-- 	<security:intercept-url pattern="/secu/admin" access="hasRole('ROLE_ADMIN')" />  --> <!-- 어노테이션으로 처리하기 위해 주석처리 -->
		
		<security:form-login login-page="/customLogin"
			authentication-success-handler-ref="customLoginSuccess"/>
		
		<!-- <security:access-denied-handler error-page="/accessError"/> -->	
		<security:access-denied-handler ref="customAccessDenied"/>
		
		<security:logout logout-url="/customLogout" invalidate-session="true"
			delete-cookies="remeber-me,JSESSIONID"/> <!-- 로그아웃시 remeber-me 쿠키 파기 -->
		
		<security:remember-me data-source-ref="dataSource" token-validity-seconds="604800"/> <!-- 604800초만큼(7일) 자동로그인이 유지 -->
	
	</security:http>
	
	<security:authentication-manager>
		
		<security:authentication-provider user-service-ref="customUserDetailsService">
		<!-- 
			<security:user-service>
				<security:user name="member" password="{noop}member" authorities="ROLE_MEMBER"/>
				<security:user name="admin" password="{noop}admin" authorities="ROLE_MEMBER,ROLE_ADMIN"/>
		 	</security:user-service>
		  -->	
		 
		 <!-- 	<security:jdbc-user-service data-source-ref="dataSource"/>  -->
		 	
		 	<security:password-encoder ref="bcryptPasswordEncoder"/>
		 	
		</security:authentication-provider>
		
	</security:authentication-manager>

</beans>
